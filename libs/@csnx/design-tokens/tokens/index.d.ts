/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
	ParsedColorToken,
	ParsedDimensionToken,
	ParsedFontFamilyToken,
	ParsedNumberToken,
	ParsedTypographyToken,
} from '@cobalt-ui/core';

export declare const tokens: {
	breakpoint: {
		desktop: ParsedDimensionToken['$value'];
		leftCol: ParsedDimensionToken['$value'];
		mobile: ParsedDimensionToken['$value'];
		mobileLandscape: ParsedDimensionToken['$value'];
		mobileMedium: ParsedDimensionToken['$value'];
		phablet: ParsedDimensionToken['$value'];
		tablet: ParsedDimensionToken['$value'];
		wide: ParsedDimensionToken['$value'];
	};
	choiceCard: {
		color: {
			background: {
				hover: ParsedColorToken['$value'];
				selected: ParsedColorToken['$value'];
				tick: ParsedColorToken['$value'];
				unselected: ParsedColorToken['$value'];
			};
			border: {
				error: ParsedColorToken['$value'];
				hover: ParsedColorToken['$value'];
				selected: ParsedColorToken['$value'];
				unselected: ParsedColorToken['$value'];
			};
			text: {
				error: ParsedColorToken['$value'];
				hover: ParsedColorToken['$value'];
				selected: ParsedColorToken['$value'];
				unselected: ParsedColorToken['$value'];
			};
		};
	};
	colour: {
		blue: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
			'9': ParsedColorToken['$value'];
			'10': ParsedColorToken['$value'];
			'11': ParsedColorToken['$value'];
			'12': ParsedColorToken['$value'];
		};
		brown: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
			'9': ParsedColorToken['$value'];
			'10': ParsedColorToken['$value'];
		};
		gray: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
			'9': ParsedColorToken['$value'];
			'10': ParsedColorToken['$value'];
			'11': ParsedColorToken['$value'];
		};
		green: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
		};
		orange: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
		};
		pink: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
		};
		red: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
		};
		special: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
			'4': ParsedColorToken['$value'];
			'5': ParsedColorToken['$value'];
			'6': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'8': ParsedColorToken['$value'];
			'9': ParsedColorToken['$value'];
			'10': ParsedColorToken['$value'];
			'11': ParsedColorToken['$value'];
			'12': ParsedColorToken['$value'];
			'13': ParsedColorToken['$value'];
		};
		yellow: {
			'1': ParsedColorToken['$value'];
			'2': ParsedColorToken['$value'];
			'3': ParsedColorToken['$value'];
		};
	};
	height: {
		ctaMedium: ParsedDimensionToken['$value'];
		ctaSmall: ParsedDimensionToken['$value'];
		ctaXSmall: ParsedDimensionToken['$value'];
		iconMedium: ParsedDimensionToken['$value'];
		iconSmall: ParsedDimensionToken['$value'];
		iconXSmall: ParsedDimensionToken['$value'];
		inputMedium: ParsedDimensionToken['$value'];
		inputXSmall: ParsedDimensionToken['$value'];
	};
	palette: {
		brand: {
			'100': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		brandAlt: {
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
		};
		culture: {
			'50': ParsedColorToken['$value'];
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'350': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'450': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'700': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		error: {
			'400': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
		};
		focus: {
			'400': ParsedColorToken['$value'];
		};
		labs: {
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
		};
		lifestyle: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'450': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		neutral: {
			'0': ParsedColorToken['$value'];
			'7': ParsedColorToken['$value'];
			'10': ParsedColorToken['$value'];
			'20': ParsedColorToken['$value'];
			'38': ParsedColorToken['$value'];
			'46': ParsedColorToken['$value'];
			'60': ParsedColorToken['$value'];
			'86': ParsedColorToken['$value'];
			'93': ParsedColorToken['$value'];
			'97': ParsedColorToken['$value'];
			'100': ParsedColorToken['$value'];
		};
		news: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'550': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		opinion: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'450': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'550': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		specialReport: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'450': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'700': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		specialReportAlt: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'700': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		sport: {
			'100': ParsedColorToken['$value'];
			'200': ParsedColorToken['$value'];
			'300': ParsedColorToken['$value'];
			'400': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
			'600': ParsedColorToken['$value'];
			'800': ParsedColorToken['$value'];
		};
		success: {
			'400': ParsedColorToken['$value'];
			'500': ParsedColorToken['$value'];
		};
	};
	size: {
		icon: {
			medium: ParsedDimensionToken['$value'];
			small: ParsedDimensionToken['$value'];
			xSmall: ParsedDimensionToken['$value'];
		};
		medium: ParsedDimensionToken['$value'];
		small: ParsedDimensionToken['$value'];
		xSmall: ParsedDimensionToken['$value'];
	};
	space: {
		'0': ParsedDimensionToken['$value'];
		'1': ParsedDimensionToken['$value'];
		'2': ParsedDimensionToken['$value'];
		'3': ParsedDimensionToken['$value'];
		'4': ParsedDimensionToken['$value'];
		'5': ParsedDimensionToken['$value'];
		'6': ParsedDimensionToken['$value'];
		'8': ParsedDimensionToken['$value'];
		'9': ParsedDimensionToken['$value'];
		'10': ParsedDimensionToken['$value'];
		'12': ParsedDimensionToken['$value'];
		'14': ParsedDimensionToken['$value'];
		'16': ParsedDimensionToken['$value'];
		'18': ParsedDimensionToken['$value'];
		'24': ParsedDimensionToken['$value'];
	};
	typography: {
		body: {
			medium: ParsedTypographyToken['$value'];
			small: ParsedTypographyToken['$value'];
			xSmall: ParsedTypographyToken['$value'];
		};
		fontFamily: {
			body: ParsedFontFamilyToken['$value'];
			headline: ParsedFontFamilyToken['$value'];
			textSans: ParsedFontFamilyToken['$value'];
			titlepiece: ParsedFontFamilyToken['$value'];
		};
		fontSize: {
			'12': ParsedDimensionToken['$value'];
			'14': ParsedDimensionToken['$value'];
			'15': ParsedDimensionToken['$value'];
			'17': ParsedDimensionToken['$value'];
			'20': ParsedDimensionToken['$value'];
			'24': ParsedDimensionToken['$value'];
			'28': ParsedDimensionToken['$value'];
			'34': ParsedDimensionToken['$value'];
			'42': ParsedDimensionToken['$value'];
			'50': ParsedDimensionToken['$value'];
			'70': ParsedDimensionToken['$value'];
		};
		fontWeight: {
			bold: ParsedNumberToken['$value'];
			light: ParsedNumberToken['$value'];
			medium: ParsedNumberToken['$value'];
			regular: ParsedNumberToken['$value'];
		};
		headline: {
			large: ParsedTypographyToken['$value'];
			medium: ParsedTypographyToken['$value'];
			small: ParsedTypographyToken['$value'];
			xLarge: ParsedTypographyToken['$value'];
			xSmall: ParsedTypographyToken['$value'];
			xxSmall: ParsedTypographyToken['$value'];
			xxxSmall: ParsedTypographyToken['$value'];
		};
		lineHeight: {
			loose: ParsedNumberToken['$value'];
			regular: ParsedNumberToken['$value'];
			tight: ParsedNumberToken['$value'];
		};
		textDecorationThickness: {
			'2': ParsedDimensionToken['$value'];
			'3': ParsedDimensionToken['$value'];
			'4': ParsedDimensionToken['$value'];
			'5': ParsedDimensionToken['$value'];
			'6': ParsedDimensionToken['$value'];
		};
		textSans: {
			large: ParsedTypographyToken['$value'];
			medium: ParsedTypographyToken['$value'];
			small: ParsedTypographyToken['$value'];
			xLarge: ParsedTypographyToken['$value'];
			xSmall: ParsedTypographyToken['$value'];
			xxLarge: ParsedTypographyToken['$value'];
			xxSmall: ParsedTypographyToken['$value'];
			xxxLarge: ParsedTypographyToken['$value'];
		};
		titlepiece: {
			large: ParsedTypographyToken['$value'];
			medium: ParsedTypographyToken['$value'];
			small: ParsedTypographyToken['$value'];
		};
	};
	width: {
		ctaMedium: ParsedDimensionToken['$value'];
		ctaSmall: ParsedDimensionToken['$value'];
		ctaXSmall: ParsedDimensionToken['$value'];
		iconMedium: ParsedDimensionToken['$value'];
		iconSmall: ParsedDimensionToken['$value'];
		iconXSmall: ParsedDimensionToken['$value'];
		inputXSmall: ParsedDimensionToken['$value'];
	};
};

export declare const modes: Record<string, never>;

export declare function token<K extends keyof typeof tokens>(
	tokenID: K,
	modeName?: never,
): (typeof tokens)[K];
export declare function token<
	K extends keyof typeof modes,
	M extends keyof (typeof modes)[K],
>(tokenID: K, modeName: M): (typeof modes)[K][M];
