// DO NOT EDIT
// this file is auto-generated by libs/@guardian/source/scripts/create-icons/index.ts
import { css } from '@emotion/react';
import { iconSize, visuallyHidden } from '../../../foundations';
import type { IconProps } from '../..';
const Svg = ({ size, theme }: IconProps) => (
	<svg
		width={size ? iconSize[size] : undefined}
		height={undefined}
		viewBox="-3 -3 30 30"
		xmlns="http://www.w3.org/2000/svg"
		focusable={false}
		aria-hidden={true}
	>
		<g clipPath="url(#list__a)">
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M8.05 5.31h13v1.5l-.39.5H8.05z"
				fill={theme?.fill}
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M8.05 11.51h13v1.5l-.39.5H8.05z"
				fill={theme?.fill}
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M8.05 17.71h13v1.5l-.39.5H8.05z"
				fill={theme?.fill}
			/>
			<path d="M5.8 5H3v2.8h2.8z" fill={theme?.fill} />
			<path d="M5.8 11.41H3v2.8h2.8z" fill={theme?.fill} />
			<path d="M5.81 17.38h-2.8v2.8h2.8z" fill={theme?.fill} />
		</g>
		<defs>
			<clipPath id="list__a">
				<rect
					width={18.05}
					height={15.18}
					fill="white"
					transform="translate(3 5)"
				/>
			</clipPath>
		</defs>
	</svg>
);

export const SvgList = ({
	size,
	theme,
	isAnnouncedByScreenReader = false,
}: IconProps) => (
	<>
		<Svg size={size} theme={theme} />
		{isAnnouncedByScreenReader ? (
			<span
				css={css`
					${visuallyHidden}
				`}
			>
				List
			</span>
		) : (
			''
		)}
	</>
);
