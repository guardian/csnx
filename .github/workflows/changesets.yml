name: Manage Changesets

on:
  push:
    branches:
      - main

env:
  NX_BRANCH: ${{ github.event.pull_request.head.ref }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  changesets-version:
    name: Manage Changesets Pull Request
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can
          # generate changelogs with the correct commits
          fetch-depth: 0

      - uses: nrwl/nx-set-shas@v3
      - uses: pnpm/action-setup@v2.2.4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      # - run: pnpm nx affected --target=build
      - run: pnpm nx run-many --target=build --all=true

      # The Nx convention is to build projects to a root `dist` directory
      # (outside their source directories), but changesets uses pnpm's workspace
      # to look for the source directory of candidate packages when trying to
      # publish.
      #
      # Therefore, after building the packages we are going to publish, we will
      # rewrite the pnpm workspace file to point to the root `dist` directory
      # instead.
      #
      # This will allow changesets to find the newly built assets to publish.
      #
      # Inspired by this article:
      # https://dev.to/jmcdo29/automating-your-package-deployment-in-an-nx-monorepo-with-changeset-4em8
      - name: Prepare workspace for publishing
        run: echo -e "packages:\n  - 'dist/libs/**'" > pnpm-workspace.yaml

      # This is a workaround for bug in changesets where it throws if you tell
      # it ignore a package it cannot find. We're ignoring @csnx/* packages to
      # stop it trying to create release PRs for them, which works fine. But at
      # this point in the lifecycle, we don't build any @csnx/* packages, so it
      # throws an error looking for them in `dist/libs` (see above) to ignore.
      - name: Create fake @csnx package (workaround for changesets bug)
        run: mkdir -p dist/libs/@csnx/null && echo -e "{\"name\":\"@csnx/null\",\"private\":true}" > dist/libs/@csnx/null/package.json

      # down to business...
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
          title: 'ðŸ¦‹ Release package updates'
          commit: 'Bump package versions'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
