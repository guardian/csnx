name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # enables use to use the cache in actions/setup-node
      - uses: pnpm/action-setup@v2.2.4

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      - run: make workspace-lint
      - run: make lint
      - run: make test
      - run: make build
      - run: make e2e
      - run: make build-storybooks

  chromatic:
    # Kick chromatic off only once all other steps have passed. This stops us
    # wasting money running checks on PRs that are going to fail anyway.
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib:
          [
            'atoms-rendering',
            'source-foundations',
            'source-react-components',
            'source-react-components-development-kitchen',
          ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # for chromatic to work

      # enables use to use the cache in actions/setup-node
      - uses: pnpm/action-setup@v2.2.4

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      # This will just retrieve the output created in `validate` from Nx's build
      # cache. It's simpler than using github actions cache.
      - run: make build-storybooks

      - uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_ATOMS_RENDERING_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          storybookBuildDir: 'dist/storybook/libs/@guardian/${{ matrix.lib }}'
          exitOnceUploaded: true
          onlyChanged: '!(main)' # turbosnap on non-main branches

  # This deploys the root-level storybook to GitHub Pages.
  #
  # It composes the individual project storybooks, which are built and deployed
  # by AWS Amplify projects on commits to main branch.
  #
  # To add another project storybook, you need to add a new AWS Amplify project.
  #
  # See the existing projects (prefixed with "csnx/storybooks-") at
  # https://eu-west-1.console.aws.amazon.com/amplify/home?region=eu-west-1 for
  # examples of how to do this.
  deploy-root-storybook:
    needs: validate

    # only runs on main branch
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # enables use to use the cache in actions/setup-node
      - uses: pnpm/action-setup@v2.2.4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile

      - name: Build root storybook
        run: pnpm nx run csnx:build-storybook

      - name: Deploy root storybook to github pages
        run: pnpm storybook-to-ghpages --ci --existing-output-dir dist/storybook/apps/csnx
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
